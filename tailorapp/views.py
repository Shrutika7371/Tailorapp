from django.conf import settings
from django.core.mail import send_mail
from django.shortcuts import render, redirect
from django.http import HttpResponse
from django.contrib.auth.decorators import login_required
from django.template.loader import render_to_string
from django.utils.html import strip_tags
from django.contrib.auth.decorators import login_required
from django.contrib.auth.models import User
from django.contrib.auth import authenticate, login, logout
import xlwt

from .models import customer

# Create your views here.
def index(request):
    return render(request, "index.html")
@login_required(login_url='index')
def dashboard(request):
    obj=customer.objects.all().filter(status='not completed')
    return render(request, 'dashboard.html', {'obj':obj})
@login_required(login_url='index')
def newu(request):
    return render(request, 'newuser.html')

@login_required(login_url='index')
def olduc(request, pk):
    obj=customer.objects.get(id=pk)

    return render(request, 'olduserc.html', {'obj':obj})
@login_required(login_url='index')
def showc(request, pk):
    obj=customer.objects.get(id=pk)
    dict1={'obj':obj}

    return render(request, 'showc.html', dict1)
@login_required(login_url='index')
def newforms(request):
   name=request.POST.get('name')
   lname =request.POST.get('lname')
   phone =request.POST.get('phone')
   email =request.POST.get('email')
   shirtu =request.POST.get('shirtunchi')
   chest =request.POST.get('chest')
   shoulder =request.POST.get('shoulder')
   astin=request.POST.get('astin')
   front=request.POST.get('front')
   coller =request.POST.get('coller')
   cuf =request.POST.get('cuf')
   pantunchi =request.POST.get('pantunchi')
   kambar=request.POST.get('kambar')
   seat=request.POST.get('sit')
   mandi=request.POST.get('mandi')
   gudhga=request.POST.get('gudhga')
   bottom=request.POST.get('bottom')
   description=request.POST.get('description')
   payment=request.POST.get('payment')
   obj=customer(name=name, lname=lname, phone=phone, email=email, shirtunchi=shirtu, chest=chest, shoulder=shoulder, astin=astin, sfront=front, coller=coller, cuf=cuf, pantunchi=pantunchi, kambar=kambar, sit=seat, mandi=mandi, gudhga=gudhga, bottom=bottom, description=description, payment=payment )
   obj.save()
   subject = 'important: tailor update'
   msg= ' प्रिय ग्राहक  '+name+'  '+ lname+'  आपण Classic  टेलर ला सेवेची  संधी  दिल्याबद्दल  धन्यवाद !!!     आम्ही आपले आभारी आहोत.  ' \
                                                   'this message is generated by machine do not reply '
   from_email = settings.EMAIL_HOST_USER
   to = [email]
   send_mail(subject, msg, from_email, to, fail_silently=True)
   
      
   return redirect('dashboard')
@login_required(login_url='index')
def searchrt(request):
    obj=customer.objects.order_by('-id')

    dict1={'obj':obj}
    return render(request, 'searchrt.html', dict1)
@login_required(login_url='index')
def searchnav(request):
     search = request.POST.get('search')
     obj = customer.objects.filter(name__contains=search)
     return render(request, 'searchrt.html', {'obj':obj})
@login_required(login_url='index')
def reorder(request):
    description = request.POST.get('description')
    payment = request.POST.get('payment')
    pk = request.POST.get('pk')
    i=customer.objects.get(id=pk)
    obj = customer(name=i.name, lname=i.lname, phone=i.phone, email=i.email, shirtunchi=i.shirtunchi, chest=i.chest, shoulder=i.shoulder,astin=i.astin, sfront=i.sfront, coller=i.coller, cuf=i.cuf, pantunchi=i.pantunchi, kambar=i.kambar, sit=i.sit, mandi=i.mandi, gudhga=i.gudhga, bottom=i.bottom, description=description, payment=payment)
    obj.save()
    print(i.name)
    return redirect('searchrt')
@login_required(login_url='index')
def completeup(request, pk):
    obj=customer.objects.filter(id=pk).update(status='completed')
    obj2=customer.objects.get(id=pk)
    if(len(obj2.email)!=0):
        subject = 'important: atmaram tailor'

        message = ' प्रिय ग्राहक ' + obj2.name + ' ' + obj2.lname + ' आपली ऑर्डर तयार आहे तरी आपण ती त्वरित घेऊन जावी '
        from_email = settings.EMAIL_HOST_USER
        to=[obj2.email]
        send_mail(subject, message, from_email, to, fail_silently=True)

    return redirect('dashboard')
@login_required(login_url='index')
def updateform(request, pk):
    obj=customer.objects.get(id=pk)
    dict1 = {'obj':obj}
    return render(request, 'updel.html', dict1)
@login_required(login_url='index')
def updatesubmit(request):
    name = request.POST.get('name')
    lname = request.POST.get('lname')
    phone = request.POST.get('phone')
    email = request.POST.get('email')
    shirtu = request.POST.get('shirtunchi')
    chest = request.POST.get('chest')
    shoulder = request.POST.get('shoulder')
    astin = request.POST.get('astin')
    front = request.POST.get('front')
    coller = request.POST.get('coller')
    cuf = request.POST.get('cuf')
    pantunchi = request.POST.get('pantunchi')
    kambar = request.POST.get('kambar')
    seat = request.POST.get('sit')
    mandi = request.POST.get('mandi')
    gudhga = request.POST.get('gudhga')
    bottom = request.POST.get('bottom')
    description = request.POST.get('description')
    payment = request.POST.get('payment')
    obj1=customer.objects.filter(name=name, lname=lname).update(phone=phone, email=email, shirtunchi=shirtu, chest=chest, shoulder=shoulder,
                   astin=astin, sfront=front, coller=coller, cuf=cuf, pantunchi=pantunchi, kambar=kambar, sit=seat,
                   mandi=mandi, gudhga=gudhga, bottom=bottom, description=description, payment=payment)
    return redirect('searchrt')
@login_required(login_url='index')
def delcust(request, pk):
    obj=customer.objects.get(id=pk)
    obj.delete()
    return redirect('dashboard')
@login_required(login_url='index')
def export_xls(request):
    response = HttpResponse(content_type='application/ms-excel')
    response['Content-Disposition'] = 'attachment; filename="users.xls"'
    wb = xlwt.Workbook(encoding='utf-8')
    ws = wb.add_sheet('customers')
    # Sheet header, first row
    row_num = 0
    font_style = xlwt.XFStyle()
    font_style.font.bold = True
    columns = ['name', 'lname', 'phone', 'email', 'shirtunchi', 'chest', 'shoulder', 'astin', 'sfront', 'coller', 'cuf ', 'pantunchi', 'kambar', 'sit', 'mandi', 'gudhga', 'bottom', 'description', 'payment', 'status', 'date']
    for col_num in range(len(columns)):
        ws.write(row_num, col_num, columns[col_num], font_style)
    # Sheet body, remaining rows
    font_style = xlwt.XFStyle()
    rows = customer.objects.all().values_list('name', 'lname', 'phone', 'email', 'shirtunchi', 'chest', 'shoulder', 'astin', 'sfront', 'coller', 'cuf', 'pantunchi', 'kambar', 'sit', 'mandi', 'gudhga', 'bottom', 'description', 'payment', 'status', 'date')
    for row in rows:
        row_num += 1
        for col_num in range(len(row)):
            ws.write(row_num, col_num, row[col_num], font_style)
    wb.save(response)
    return response
def dologin(request):
    username=request.POST.get('username')
    passw=request.POST.get('passw')
    user = authenticate(request, username=username, password=passw)
    if user is not None:
        login(request, user)
        flag=redirect('dashboard')
    else:
        flag=redirect('index')
    return flag


def logout_view(request):
    logout(request)
    return redirect('index')